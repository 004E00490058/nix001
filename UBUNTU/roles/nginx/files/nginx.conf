user www-data;
worker_processes 2;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
# Определяем количество рабочих процессов
  worker_connections 1024;
#Метод обработки соединений
  use epoll;

# Будет принимать максимально возможное количество соединений
  multi_accept on;
}

http {

upstream apache24 {
  server 127.0.0.1:81;
}

include /etc/nginx/mime.types;
default_type application/octet-stream;

log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                           '"$http_user_agent" "$http_x_forwarded_for"';
access_log /var/log/nginx/access.log main;

client_header_timeout 30;

# Будет ждать 30 секунд тело запроса от клиента, после чего сбросит соединение
client_body_timeout 30;

# Если клиент перестал читать отвечать, Nginx будет сбрасывать соединение с ним
reset_timedout_connection on;


# В этом случае сервер не будет принимать запросы размером более 1Мб
client_max_body_size 32m;
client_body_buffer_size 4m;

# Метод отправки данных sendfile более эффективен, чем стандартный метод read+write
sendfile on;

# Будет отправлять заголовки и и начало файла в одном пакете
tcp_nopush on;
tcp_nodelay on;

# Будет ждать 65 секунд перед закрытием keepalive соединения
keepalive_timeout 65;

proxy_buffering on;
proxy_connect_timeout 300;
proxy_send_timeout 300;
proxy_read_timeout 300;
proxy_buffer_size 64k;
proxy_buffers 8 64k;
proxy_busy_buffers_size 64k;
proxy_temp_file_write_size 10m;

# включаем сжатие
gzip on;
# отключаем сжатие для старья
gzip_disable "msie6";
gzip_proxied any;
gzip_min_length 1024;
gzip_comp_level 4;
# определяет MIME типы, для которых будет работать сжатие
gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript application/atom+xml application/rdf+xml;

#Запретить вывод версии Nginx
server_tokens off;

include /etc/nginx/conf.d/*.conf;
include /etc/nginx/sites-enabled/*;
}
